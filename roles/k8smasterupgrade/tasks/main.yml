- name: check if etcd backup exists and register output
  stat:
    path: "{{ pathtosave }}"
  register: stat_result

- name: Print version current version
  shell: kubectl get nodes
  register: cluster_cversion_stat
- debug:
    var: cluster_cversion_stat.stdout_lines


- name: Set kubeadm version to update
  yum: 
    name: "{{ kubeadmnewv }}"
    state: present
  when: stat_result.stat.exists == True

- name: Upgrade cluster to specified version earlier "{{ kubeadmnewv }}"
  shell: |
    kubeadm upgrade plan > /tmp/upgradecluster.txt 2>&1
    tail -10 /tmp/upgradecluster.txt | grep "kubeadm upgrade apply" > /tmp/upgradecluster.sh
    chmod 755 /tmp/upgradecluster.sh
    echo "updating cluster"
    /tmp/upgradecluster.sh 
    
    exit 0
  register: cluster_update_stat
- debug:
    var: cluster_update_stat.stdout_lines

- name: Upgrade kubelet 
  yum:
    name: "{{ kubeletversion }}"
    state: present
- name: reload kubelet 
  service:
    name: kubelet
    state: restarted
- name: Upgrade kubectl
  yum:
    name: "{{ kubectlversion }}"
    state: present

- pause:
    seconds: 30

- name: Print version
  shell: kubectl get nodes
  register: cluster_version_stat
- debug:
    var: cluster_version_stat.stdout_lines
 

